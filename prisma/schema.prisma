// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // Relation fields
  posts    Post[]
  images   Image[]
  comments Comment[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // Relation fields
  author        User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String
  commentable   Commentable @relation(fields: [commentableId], references: [id], onDelete: Cascade)
  commentableId String      @unique
}

model Image {
  id        String   @id @default(cuid())
  title     String
  url       String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // Relation fields
  author        User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String
  commentable   Commentable @relation(fields: [commentableId], references: [id], onDelete: Cascade)
  commentableId String      @unique
}

model Commentable {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // Relation fields
  post     Post?
  image    Image?
  comments Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // Relation fields
  author        User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String
  commentable   Commentable @relation(fields: [commentableId], references: [id], onDelete: Cascade)
  commentableId String
}
